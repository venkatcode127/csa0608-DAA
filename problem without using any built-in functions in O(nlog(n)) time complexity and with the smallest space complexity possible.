#include <stdio.h>
#include <string.h>

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    int left_sub[n1], right_sub[n2];

    for (int i = 0; i < n1; i++) left_sub[i] = arr[left + i];
    for (int i = 0; i < n2; i++) right_sub[i] = arr[mid + 1 + i];

    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (left_sub[i] <= right_sub[j]) {
            arr[k] = left_sub[i];
            i++;
        } else {
            arr[k] = right_sub[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        arr[k] = left_sub[i];
        i++;
        k++;
    }

    while (j < n2) {
        arr[k] = right_sub[j];
        j++;
        k++;
    }
}

void merge_sort(int arr[], int n) {
    int size = 1;

    while (size < n) {
        int left = 0;

        while (left < n - size) {
            int mid = left + size - 1;
            int right = ((left + 2 * size - 1) < (n - 1)) ? (left + 2 * size - 1) : (n - 1);

            merge(arr, left, mid, right);
            left += 2 * size;
        }

        size *= 2;
    }
}

int main() {
    int num[] = {5, 2, 9, 1, 5, 6};
    int n = sizeof(num) / sizeof(num[0]);

    merge_sort(num, n);

    for (int i = 0; i < n; i++) {
        printf("%d ", num[i]);
    }
    printf("\n");

    return 0;
}
